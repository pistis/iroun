enabled browser Refresh Client hot Reload options options path MARKO BROWSER REFRESH enable Builder make Node array Expression assignment binary Expression sequence Expression code computed Member Expression concat conditional Expression container Node custom Tag declaration document Type Statement Statement expression Each Each Prop Range Statement Call Declaration html html Comment comment html Element html Literal identifier identifier Out Statement literal literal literal literal literal Undefined logical Expression macro member Expression module Exports negate Expression node object Expression parse Expression parse Java Script Args parse Java Script Params parse Statement replace Placeholder Escape Funcs program property render Body require require Resolve Statement scriptlet self Invoking strict Equality template Literal template Root text Expression unary Expression update Expression variable Declarator vars Statement is Array ok Node Program Template Root Declaration Call Literal Identifier Comment Assignment Binary Expression Logical Expression Vars Html Element Html Text Each Each Prop Range Html Comment Self Invoking Statement Update Expression Unary Expression Member Expression Code Macro Conditional Expression Expression Object Expression Array Expression Property Variable Declarator Expression Template Literal Expression Scriptlet Container Node Statement Document Type Declaration Sequence Expression Custom Tag parse Expression parse Statement parse Java Script Args parse Java Script Params is Valid Java Script Identifier literal literal Undefined literal literal identifier Out identifier Require i i i i i i computed operator operator operator right node node def def def argument error object property property module Exports prefix prop properties Object value parsed parsed name callee callee args args declarations declaration id id init init arg arg key key arg arg arg BUILDER BUILDER BUILDER BUILDER BUILDER elements left left left left right right right right expressions object object property property args args args args code Generator test test test params params params params of Expression Expression from to step init init init init update callee callee argument argument argument argument argument argument name generate Code properties properties Object str str key value path path id declarations declarations value value value value value value value value value value value value value name name name name name name name name name name name name name name name i i i i i i elements left left left left left left right right right right right right operator operator operator operator operator operator operator operator operator expressions expressions object object object object property property property property computed computed computed test test test test test consequent alternate declaration document Type body body body body body body body body body body body body body body body params params params params params params params of from to step init init init init init update callee callee callee callee args args args args args argument argument argument argument argument argument argument argument comment comment tag Name attributes open Tag Only self Closed code code prefix prefix prefix key key properties tag block quasis escape preserve Whitespace id id id id id id declarations declarations kind kind BUILDER exports Generator Event Nodes Code Generator insert Code push add add add Code add Dependency push Meta set Meta get Escape Xml Attr Module invokeCodeGenerator generateCode generate Code is Literal Node is Identifier Node is Preserve Whitespace Enabled add Error on Done get Require Path resolve Path is Array Node Literal Identifier Html Element Html ok Container create Error error Message old Current Node before After Event is Whitespace Preserved Nodes is List node error Info child child Code node node node node node node node node node node node node name name value value value value code path path type options key key unique Name error Message err child child Nodes Nodes Nodes Nodes Nodes Nodes Nodes before After Event before After Event before After Event before After Event before After Event before After Event code Generator Func code Generator Func generated Code generated Code error Info listener Func target Filename path Expression node node node codegen is Before is Before is Before builder builder context context inserted Nodes inserted Nodes inserted Nodes inserted Nodes inserted Nodes nodes finalNode last Node last Node root code current Indent doneListeners codegenCodeMethodName currentNode currentNode message code exports Code Writer get Code write Block write Node write Statements write write inc Indent dec Indent write Line Indent write Indent is Literal Node is Identifier Node write Literal is Array Node Literal Identifier ok Container Comment is Valid Java Script Name first Statement node i i i v v keys k node builder body body nodes nodes node node node node write Node write Node code code value value value v v v v k k builder root indentStr indentSize code code code code code code code code current Indent current Indent current Indent current Indent statement exports Compile Context get Taglib Path remove Ext require Resolve get Pos Info get Node Pos set Flag clear Flag is Flag Set push Flag pop Flag set Migration Flag pop push Data pop Data get Data deprecate add Error has Errors get Errors get Require Path Module add get Vars add get Vars add Code get Code get Tag Def add Error Unrecognized Tag create Node El is Macro get Registered Macro register Macro Template add Dependency push Meta set Meta set Preserve Whitespace begin Preserve Whitespace end Preserve Whitespace is Preserve Whitespace set Preserve Comments is Preserve Comments create Walker resolve Path resolve Template get Nodes helper get Fingerprint add Optimizer optimize get Module Runtime Target is Browser Target is Server Target add Migration ok path path path complain taglib Props Unique Vars Pos Info Compile Error Node macros extend Walker Event Emitter util Fingerprint html Elements marko Modules marko Pkg Version root Dir is Debug FLAG CUSTOM ELEMENT FLAG PRESERVE WHITESPACE ext ext require Resolve Node helpers write Version Comment src Props line column el data Stack data Stack data Stack current Node location node message message code code pos pos deresolved key Id builder builder builder builder require Func Call actual Name actual Name taglib Lookup taglib Lookup el Node el Node attr Def attr Def val is At Tag custom Element node Factory Func Node found Attrs attr Name attr Name load Template Arg load Call Nodes Vars Init Nodes Code Array target helper Identifier helper Info method Name method Identifier module Identifier fingerprint taglib Path filename builder path attr Name attr attr Def e Name optimizer dirname taglib Path filename filename filename require Resolve Node pos pos name name name name name name name name name name data key location message root Dir deresolved target Filename path path path Name Name Name Name require Func Call require Func Call init init actual Name actual Name code code tag Name tag Name tag Name tag Name tag Name tag Name attributes attributes attr Def val el Def el Def FLAG CUSTOM ELEMENT el Node el Node attr Name attr Name attr Name attr Name relative Path relative Path relative Path relative Path builder load Call dependency e value value FLAG PRESERVE WHITESPACE FLAG PRESERVE WHITESPACE FLAG PRESERVE WHITESPACE path Expression path Expression path Expression Vars Init Nodes Nodes Code Array target method Name method Identifier module Identifier len optimizer root Node module module module module module module module module module module module module module module module assign attr attrs merge Attrs Attr List create Element method method method method method method define Component dynamic Tag escape Xml escape Xml Attr escape Script escape Style Each Each Prop Range get Widget From Out include load Nested Tag load Tag load Template merge Nested Tags Helper merge props Previous Node renderer renderer Legacy register Component str vdom html style Attr create Text src filename builder dirname taglib Lookup data dataStacks meta options root target output Type compiler Type compiler Version write Version Comment ignore Unrecognized Tags escape At Tags vars uniqueVars staticVars staticCode staticCode uniqueStaticVars srcCharProps srcCharProps flags errors macros macros preserveWhitespace preserveWhitespace preserveComments preserveComments use Meta marko Module Prefix moduleRuntimeTarget unrecognized Tags parsingFinished helpersIdentifier helpersIdentifier helpers imports fingerprint fingerprint optimizers optimizers is Component name name name name name mfe key key key key key location node node node node node node message message message message message code code pos pos pos pos actual Name actual Name tag Name tag Name tag Name argument attributes attributes attributes open Tag Only self Closed value value body body currentNode custom Element no Output attr Name tag Def type path is Valid Java Script Identifier is Java Script Reserved Word util exports Compile Error to String pos pos end Pos str pos end Pos context node message code pos end Pos exports Compiled Template Compiler transform Node transform Tree Helper transform Tree handle Errors compile ok path Code Generator Code Writer create Error resolve Dep FLAG TRANSFORMER APPLIED transformer Func transform Func errors message i i len error error meta root code Writer compiled Src code Generator ast unrecognized Tag transformed AST AST node node context context context context transformer root Node dep transformer transformer transformer FLAG TRANSFORMER APPLIED FLAG TRANSFORMER APPLIED FLAG TRANSFORMER APPLIED node node node context context context context context context context context context context e child Node root Node root Node dep root options src ast transformed AST currentNode errors ast context filename builder parser migrate parsingFinished exports Html Js Parser on Text on Placeholder on String on CDATA on Open Tag Name on Open Tag on Close Tag on Document Type on Declaration on Comment on Scriptlet on Error is Open Tag Only parse htmljs value tag Parse Options tag Parse Options tag String tag Name listeners merged Options parser match part event event event event event tag Parse Options tag Parse Options tag String tag Name tag Name options listeners src filename Options value self Closed self Closed ignore Placeholders parser exports Migrator migrate Node migrate Tree Helper migrate Tree migrate create Error FLAG MIGRATOR APPLIED migration migration node node context context context ast migration migration FLAG MIGRATOR APPLIED FLAG MIGRATOR APPLIED FLAG MIGRATOR APPLIED node node node context context context context context context e child Node ast ast ast currentNode exports Normalizer is Conditional IE Comment merge Shorthand Names exit normalize normalize Element normalize Comment ok ie Conditional Comment Reg Exp builder builder Names Attr Names i Name normalizer context Node preserve Comment comment Name el shorthand Names context attr comment Name Name Attr Names root Node root Node context context node node Node Node Node value context context tag Name argument params tag String open Tag Only self Closed pos pos attributes example Tag Param exports Parser get Simplified Value get Parser State Tag reset parse handle Characters handle Start Element parse Attributes handle End Element handle Comment handle Declaration handle Document Type handle Body Text Placeholder handle Scriptlet handle Error get Tag Parse Options is Open Tag Only ok extend Normalizer Migrator COMPILER ATTRIBUTE HANDLERS attributes attributes i attr attr Name attr Name attr Name body builder builder builder builder builder builder builder builder builder root Node merged Options raw migrate migrator normalizer escape context context tag Name tag Name argument params handler tag Def tag Def tag Def should Parse Attributes parsed Attributes parsed Attributes attribute Parse Errors attribute Parse Errors el Def node parsed parsed attr Raw Value valid attr Def comment Node declaration Node doc Type Node parsed Expression preserve Whitespace text scriptlet last state parse Options node parser el tag Def e Name attr parser Impl context context context context options src merged Options root Node root Node text text escape escape COMPILER ATTRIBUTE HANDLERS attr attributes el Def node node e parsed parsed attr Name attr Value attr Raw Value attr Def comment comment Node value value declaration Node doc Type Node expression parsed Expression preserve Whitespace event scriptlet tag Name tag Name el tag Def parse Options message message message code code code parser Impl prev Text Node prev Text Node prev Text Node prev Text Node prev Text Node prev Text Node prev Text Node prev Text Node prev Text Node prev Text Node stack stack Options context context root node node node value value tag Name tag Name pos pos pos pos argument argument params tag String open Tag Only self Closed attributes tag Def raw Shorthand Id raw Shorthand Names raw Tag Name Expression tag name raw Value spread has Imperative Component Ids errors end Pos state state exports Walker noop reset skip stop replace remove walkArray walkContainer walk is Array Container has Removal transformed transformed i parent replaced array Array container node node i array array array node node node node node node node node i transformed parent parent container enter exit enterArray exitArray stopped stopped stack skipped skipped replaced replaced removed removed i i exports Array Container Each replace Child remove Child remove Children prepend Child append Child insert Child Before insert Child After move Children To get Previous Sibling get Next Sibling Each Next Sibling ok is Array Container array array array array array array array array i i i i i i i i i item len len len len cur Child cur Child cur Child cur Child child Index cur Node cur Node cur Node found keep Going node Obj Obj item i i Child Child Child Child Child Child Child Child Child child child Index reference Node reference Node cur Child cur Node Items items i container container container container container container container length length array exports Array Expression generate Code write Code walk to JSON to String Node elements elements result element element i i element elements elements elements elements type exports Assignment generate Code write Code walk is Compound Expression to String Node left left right right operator operator wrap wrap result left right left left left right right right operator exports Attribute Placeholder generate Code write Code walk is Compound Expression Node value value value escape exports Binary Expression write Code Operand operand To String generate Code write Code is Compound Expression to JSON walk to String Node is Compound Expression wrap wrap result left left left right right right operator operator operator builder node node writer node node node left left writer writer operator right right left left left left operator operator right right right right type exports Code generate Code write Code Node adjust Indent code code code value exports Comment isMultilineComment generate Code write Code to String Node comment name comment comment name comment comment exports Conditional Expression generate Code write Code is Compound Expression to JSON walk to String Node test test consequent consequent alternate alternate test consequent alternate test test test test consequent consequent consequent consequent alternate alternate alternate alternate type exports Container to JSON node exports Container Node generate Code walk Node type body body exports Custom Tag get Nested Variables get Allowed Attributes String check Nested Tag Can Be Added Directly To Input get Next Nested Tag Name get Next Render Body process Directly Nested Tags is White Space Text Node handle Attr build Input Props resolve Tag Def add Nested Variable add Nested Tag add Props has Prop add Prop set Renderer Path get Nested Tag generate Render Tag Code generate Render Node generate Render Body Code generate Code Html Element remove Dashes safe Name ok merge CUSTOM TAG KEY variable Names possible Name Attributes i i len attr Name attr Name keep attr Names tag Def tag Def tag Def tag Def tag Def tag Def tag Def tag Def is Repeated tag Name tag Name tag Name previous Matching Nested Tags previous Nested Tag key key nested Tag Info next Info custom Tag custom Tag Node condition context context context context builder builder builder builder builder explicit Attrs computed Attrs input Props input Props input Props attrs prop Chain parent is Dynamic Tag is Dynamic Tag is First Of Many attr Def error Message allowed Attributes String prop Name prop Expression arg Expression parent Custom Tag parent Tag Def nested Tag Name fully Qualified Name taglib Loader by Name Array next Nested Tag Name is Nested Tag is Nested Tag tag Name renderer Path template Require Path template load Tag tag load Tag Args argument Node properties has Body has Body nested Variable Names body body Name body Name body Params body params render Body render Body additional Attrs current Value nested Tag Value body Only render Tag Node Statement nested variable el Node tag Def tag Def codegen codegen attr Def attr Def tag Name context context context nested Tag parent Custom Tag child node node attr Name attr Value attr i prop prop Name attr Name attr Name attr Name attr Name attr Name attr Name attr Name Name variable variable tag Name tag Name tag Name cur Node custom Tag el context context context context context context context context context prop Name prop Name attr Value attr Value attr Def attr Def error Message explicit Attrs explicit Attrs additional Attrs additional Attrs additional Attrs prop attr Props attrs input Props input Props input Props input Props arg Expression arg Expression CUSTOM TAG KEY CUSTOM TAG KEY CUSTOM TAG KEY CUSTOM TAG KEY fully Qualified Name name name name nested Tag additional Props tag Def tag Def tag Def next Nested Tag Name tag tag tag tag tag Args tag Args tag Args renderer Path renderer Require Path renderer Require Path template Require Path tag Name tag Name load Tag load Tag codegen codegen codegen codegen codegen codegen codegen codegen codegen load Tag Args properties param body Name body Params body body body body nested Variable Names parent Custom Tag parent Custom Tag params nested Tag Value nested Tag Value render Body Identifier render Body Identifier render Body body Only i next next key key isDirectlyNestedTag isDirectlyNestedTag isDirectlyNestedTag isDirectlyNestedTag condition condition type tag Def tag Def tag Def tag Def nestedTagVar nestedTagVar inputProps inputProps foundNestedTagsByName hasDynamicNestedTags hasDynamicNestedTags additionalProps additionalProps additionalProps rendererPath rendererPath parent Prop Name prop Name prop Name prop Name name name target Property target Property attributes is Nested Tag is Repeated parent Custom Tag is Dynamic Tag tag Name params render Body render Body body Name exports Declaration generate Code HTML to JSON Node builder declaration type value exports Document Type generate Code HTML generate Code VDOM to JSON Node builder document Type type value exports generate Code write Code walk Node body body body body body matched exports generate Code walk Node test test body body matched exports Expression generate Code write Code is Compound Expression to String Node ok value exports Each generate Code walk ok Node context builder params params of of body body exports Each Prop generate Code walk ok Node context params Expression body builder params body params params body body exports Range generate Code walk ok Node context params from to step builder params params params body body from from to to step step exports Statement generate Code write Code walk Node init test update body init test update body init init init test test test update update update body body body exports Call generate Code write Code walk to String ok Node is Compound Expression args args args i i i arg arg arg callee callee wrap Parens args Len args Len result args callee callee arg callee callee callee args args args exports Declaration generate Code write Code is Compound Expression walk Node ok old name params body statement i params Len name body name name params params body body body exports Html append append generate Code HTML write Code walk Node Literal is Compound Expression argument argument len len last append Argument args i arg argument argument argument append Argument append Argument append Argument arg arg argument argument argument argument value value exports is String Literal is No Escape Xml flatten Helper flatten Attr Concats add Html add Html Literal generate Code Expression Attr runtime Html Helpers attr escape Xml Attr left right is String flattened Concats has Literal builder builder Nodes context i i part attr Args name value argument escape literal Value node node node node argument value value name escape codegen node node value value value value argument argument part part part name name name attr Args literal Value escape codegen is String is String is String concats concats concats value nonstandard exports Html Attribute before Generate Code after Generate Code generate Code HTML generate Code VDOM is Literal Value is Literal String is Literal walk Node Literal ok compiler generate Code HTML generate Code VDOM vdom Util event event def before Generate Code after Generate Code codegen codegen vdom Util is Attribute is Attribute type name value value value raw Value escape spread argument def is Html Attribute exports context builder name attr Value literal Value nonstandard value value value value is exports Html Attribute Collection add Attribute remove Attribute rename Attribute remove All Attributes has Attribute has Attributes get Attribute set Attribute Value get Attributes to JSON to String replace Attributes walk ok Html Attribute Node name name expression i i cur Attr cur Attr key attr attr attr Value Attributes attr attributes attributes Attr Attr name name name name i i attr attr Name attr Def Attributes name name name name name name key value value value escape escape all lookup exports Html Comment generate Code HTML generate Code VDOM walk set Property Value Node comment comment builder builder comment Args comment comment comment comment Args comment comment properties name exports End Tag generate Code Node tag Name builder tag Name tag Name exports Start Tag generate Code Node builder tag Name self Closed context nodes attributes has Spread i i attr attr explicit Attrs attrs is First Of Many attr tag Name attr explicit Attrs attrs tag Name attributes properties argument self Closed exports Start Tag End Tag builder tag Name properties object Props attributes body argument has Body open Tag Only body Only self Closed is Custom Element start Tag properties Script start end prop Name attr tag Name properties prop Name object Props body body Only body Only start Tag tag Name tag Name attributes properties argument self Closed exports Html Element before Generate Code after Generate Code add Runtime Flag set Key generate Code HTML generate Code VDOM get Attribute get Attribute Value add Attribute set Attribute Values set Attribute Value set Property Value get Properties replace Attributes remove Attribute remove All Attributes has Attribute get Attributes Each Attribute set Tag Name is Literal Tag Name to JSON set Body Only walk Node Literal Html Attribute Collection generate Code HTML generate Code VDOM vdom Util tag Name tag Name context context tag Def tag Def attr attr Value attributes i len event event tag Name tag Name before Generate Code after Generate Code codegen codegen vdom Util name name name name name attr attr Name attr Value value escape Attributes Obj i walker tag Name tag Name tag Name tag Name tag Name tag Name Expression tag Name Expression tag Name Expression tag Name Expression tag Name Expression tag String tag String attributes attributes properties properties body body body argument argument params open Tag Only self Closed body Only body Only body Only runtime Flags runtime Flags key key name value type attributes exports End Element VDOM write Code Node exports Html Element VDOM finalize Create Args is Properties add Attr generate Code walk write Code set Id finalize Properties Node vdom Util FLAG IS SVG FLAG IS TEXTAREA FLAG SIMPLE ATTRS CREATE ARGS COUNT INDEX TAG NAME INDEX ATTRS INDEX KEY INDEX COMPONENT INDEX CHILD COUNT INDEX FLAGS INDEX PROPS length i i arg MAYBE SVG SIMPLE ATTRS v context builder builder tag Name tag Name tag Def attributes properties properties attributes Arg attributes Arg has Named Attributes has Spread Attributes has Simple Attrs explicit Attrs attrs literal Value is First Of Many value body key child Count create Args flags child create Args builder properties attr i context value explicit Attrs attrs child Count flags create Args create Args create Args create Args create Args builder func Call child i i i length a script style style title id tag Name tag Name tag Name is is Attrs is Html Only attributes attributes properties properties properties properties body body key runtime Flags is Auto Keyed is SVG is SVG is SVG is SVG is Text Area is Text Area has Attributes has Attributes has Simple Attrs has Simple Attrs is Child is Child create Element Id attributes Arg attributes Arg properties Arg is Literal Tag value name INDEX TAG NAME INDEX ATTRS INDEX KEY INDEX COMPONENT INDEX CHILD COUNT INDEX FLAGS INDEX PROPS exports check Attributes check Properties Html Element VDOM End Element VDOM i i i attr keys prop Name prop Value is is body tag Name attributes key properties is Auto Keyed runtime Flags next Id builder is Key is Attrs is Props is Html Only child body Only html El VDOM start end attributes properties vdom Util key properties properties properties prop Value key attributes vdom Util body Only body Only body key key tag Name attributes properties body body body is is Attrs is Html Only next Id runtime Flags is Auto Keyed exports Identifier generate Code write Code to String Node name name name exports remove Whitespace Nodes generate Code write Code append Child walk Node i previous whitespace Nodes test body whitespace Nodes cur Node whitespace Nodes whitespace Nodes cur Node test body Child length test test test body body body matched matched matched exports Literal walk Value generate Code write Code to String walk Node is Array is Valid Java Script Name array i i i i el object keys keys key old Value Value Object value value result k v value walker value value value value value value el walker walker walker object old Value k k k i i key value value k exports Logical Expression generate Code Operand operand To String generate Code write Code is Compound Expression to JSON walk to String Node is Compound Expression wrap wrap result left left operator operator right right node node writer node node node left left writer writer operator right right left left left left operator operator right right right right type exports Macro generate Code walk Node ok name builder macro Def Name body name Name body name params params body body exports Member Expression generate Code write Code to JSON walk to String Node is Compound Expression ok object object property property computed computed wrap Parens result object object property property object object object object property property property property computed computed type exports Expression generate Code write Code is Compound Expression to JSON walk to String Node is Compound Expression callee callee args args wrap wrap i i args Len args Len arg arg result callee callee callee arg callee callee callee callee args args args args type exports Node trim on emit listener Count on Before Generate Code on After Generate Code wrap replace insert Sibling Before insert Sibling After make Container prepend Child append Child append Children insert Before Each Child move Children To remove Children Each Next Sibling is Transformer Applied set Transformer Applied to String to JSON detach is Compound Expression is Detached set Type set Code Generator get Code Generator set Flag clear Flag is Flag Set set Preserve Whitespace is Preserve Whitespace set Node set Trim Start End normalizeChildTextNodes Container Array Container ok extend inspect Event Emitter text is First is First is Last replaced replaced container container container body body result body Text child Text preserve Whitespace trim Start End is Preserve Whitespace current Text Literal literal Text Nodes first Text Node last Text Node text Node text Node node child cur Child text event event listener listener listener wrapper Node replaced replaced Node Node Node Node array node node node reference Node callback callback Obj Obj target Node transformer transformer name current Text Literal trim value value value value type type statement container container pos tag Def codeGeneratorFuncs codeGeneratorFuncs flags transformersApplied preserveWhitespace preserveWhitespace events events childTextNormalized childTextNormalized data finalNode finalNode trimStartEnd trimStartEnd name is First is First is Last is Last exports Object Expression generate Code write Code get Property add Properties add Property has Properties to JSON walk to String Node properties properties properties properties i i cur Property cur Property literal Key Value result prop prop prop i i prop prop props property properties properties properties properties i type exports Program generate Code write Code walk Node body body body exports Property generate Code write Code to JSON walk to String is Valid Java Script Identifier Node key key key value value value computed prop Name key key value value prop Name key key key key value value value value computed type exports generate Code write Code walk Node argument argument argument argument argument exports Scriptlet generate Code write Code walk Node adjust Indent code code code code code tag block exports Self Invoking generate Code walk Node params args old body Declaration Call params body Declaration args params params args args body body exports Sequence Expression generate Code write Code is Compound Expression to JSON walk to String Node i i expression expression code expression expressions expressions expressions expressions type exports Template Literal generate Code write Code walk escape Quasi Node context builder parts i i i quasi quasi expr expr expression code quote match quasi quote quasi quasi expr expression quote quasis expressions expressions nonstandard exports Template Root create Vars Array buildVersionComment add Render Param generate Code set Module Code to JSON walk Node Init version compiler Type context builder render Statements vars render Params create Args template Declaration body Nodes render template render template Renderer Member event Args vars builder context vars vars id create Args builder context Nodes render Params render Statements event Args template Renderer Member render assign Render Code body id init body body body body extra Render Params extra Render Params generate Assign Render Code module Code module Code context template template Renderer Member render type exports append escape Xml Literal context argument escape html Array builder escape Identifier argument argument argument argument argument escape Identifier append html Array value exports Text generate Code HTML generate Code VDOM is Literal is Whitespace to JSON ok Node Literal generate Code HTML generate Code VDOM vdom Util argument codegen codegen vdom Util argument argument escape normalized is First is Last preserve Whitespace type exports Text VDOM generate Code append append write Text Args write Code Node Literal vdom Util context args args len len last builder escape func Name i arg context append Argument arg func Name func Name is is escape is Html Only is Child create Text Id str Func Id str Func Id value exports Text VDOM Literal he argument escape is literal Value literal Value argument argument is escape exports Expression generate Code write Code to String Node exports Unary Expression generate Code write Code is Compound Expression to JSON walk to String Node is Compound Expression argument argument operator operator prefix prefix wrap wrap result operator operator argument argument argument argument argument argument argument operator operator prefix prefix type exports Update Expression generate Code write Code is Compound Expression to JSON walk to String Node is Compound Expression argument argument operator operator prefix prefix wrap wrap result operator operator argument argument argument argument argument argument argument operator operator prefix prefix type exports Variable Declarator generate Code write Code walk Node Identifier is Valid Java Script Name name error id init name id init id id id init init init code exports Vars generate Code write Code walk Node declarations declarations scoped Body kind is Statement i declarator scoped Body declarator kind declarations declarations declarations body body exports Statement generate Code write Code walk Node test body test body test test test body body body exports should Assume Up To Date g config check Up To Date write To Disk assume Up To Date preserve Whitespace output write Version Comment ignore Unrecognized Tags escape At Tags auto Key Enabled MARKO CONFIG exports get get configure create Builder create Walker should Ignore Unrecognized Tags compile compile compile Browser compile File compile File Browser check Up To Date get Last Modified clear Caches parse Raw parse register Core Taglibs build Taglib Lookup Compiler Walker Parser Html Js Parser Builder extend Compile Context global Config ok fs taglib defaults Parser Compiler options compiler context context compiled template Src parsed errors message i len error error core Taglibs Registered Config options options options options options options options options options path path src src src filename filename filename filename filename filename filename user Options callback callback callback callback callback callback template Src template Src dirname global Config global Config global Config exports exports defaults Config filename filename filename filename filename filename filename filename filename filename options options options options options options options options options options options user Options src src src src context context context context e callback callback callback callback callback err template Src template Src template Src template Src dirname file Path enumerable enumerable configurable configurable parser builder builder ignore Unrecognized Tags source Only source Only source Only source Only output output meta meta browser browser encoding encoding raw ignore Placeholders errors create Builder compile File compile compile Browser compile File Browser parse Raw parse check Up To Date get Last Modified create Walker configure clear Caches taglib Lookup taglib Loader taglib Finder build Taglib Lookup register Taglib is Supported VDOM modules should Remove Ext require resolve resolve From deresolve Require resolve From deresolve deresolve Options helpers path path from from target target Filename deresolve Options exports Pos Info get Relative Path to String path absolute Path absolute Path absolute Path path path line column exports Unique Vars add safe Name entry vars i cur Entry value name Entry vars vars name name name value value counter exports remove Initial Empty Lines remove Trailing Empty Lines adjust Indent split Lines Reg Exp initial Indentation Reg Exp last lines initial Indentation Matches indentation lines lines line i str Indentation i split Lines Reg Exp lines lines indentation i exports convert nodes i converted elements left left left right right right body body callee callee args args test consequent alternate alternate name params quasi quasis expressions object property container container converted Child properties computed key value argument argument argument id kind declarations Node Test Node Body Node Node Test Node Body Node Body Node Init Node Test Node Update Node Body Node Test Node Body q node node elements left left left right right right callee callee args args test consequent alternate alternate name params body literal Value quasis expressions object property child converted Child properties key value computed argument argument argument id init declarations kind Node Test Node Body Node Node Test Node Body Node Body Node Init Node Test Node Update Node Body Node Test Node Body ast i nonstandard exports exports sha1 str exports parse File JSON load Tags get Root Dir get Registered Element lasso Root path lasso Caching FS fs strip Json Comments fs Read Options modules json taglib Props raw tags tags tag Name tag cache Root Dir current Dir file Path parent Dir path file dirname tag Name dir path fs Read Options json file file k dirname dir current Dir current Dir file Path file Path encoding tag Name file Path get Registered Element is Compound Expression expression exports reserved Words exports id Reg Exp Name exports reserved Words Name Reg Exp Name exports await exports Macros Context is Macro get Registered Macro register Macro create Macros Context safe Name ok Name macro Def name name name byName name name Name create Macros Context Node arg Prop merge merge merge props1 props2 merge merge merge value exports parse Java Script src builder exports parse Expression ok parse Raw Java Script Ast covert Raw Java Script Ast ast src builder is Expression ast builder src exports parse Java Script Args ok parse Raw Java Script Ast convert Raw Java Script Ast ast node args builder builder builder node exports parse Java Script Params ok parse Raw Java Script Ast ast param Src node params builder builder param Src param Src exports ok esprima start Code end Code start Offset end Offset parse Src error Index error Message wrapped Error parse Src start Offset end Offset range source index src code exports parse Java Script src builder exports tokenizer comments len i comment token token str name name name name pattern pattern pattern pattern exports exports safe Name parts str i Name exports get Token Each Token create i token Value token Def tokens Reg Exp token matches token tokens value matches token start end name value last Index create Optimizer Context Node VDOM Optimizer VDOM write Code generate Node handle Attributes generate Nodes Array enter Array Optimize Node optimize Node OPTIMIZER CONTEXT KEY OPTIONS OPTIONS OPTIMIZE TEXT NODES next Id Func context builder builder builder Id fingerprint Literal func Call Args func Call optimizer Context optimize Nodes Node Id attributes Arg Attrs Id Nodes i node walker node node node nodes context context options options Id func Call Args func Call node node node node node node node node node attributes Arg context context context context OPTIONS OPTIMIZE TEXT NODES nodes options OPTIONS optimize Text Nodes optimize Text Nodes optimize Nodes optimize Nodes context next Attrs Id next Node Id nextConstIdFunc nextConstIdFunc variable Identifier is Component OPTIMIZER CONTEXT KEY create Element Id is Root is Root attributes Arg exports register Optimizer Optimizer VDOM is Value OPTIMIZER ADDED KEY data context OPTIMIZER ADDED KEY register Optimizer register Optimizer is Value is Array is Object is Value Literal Node i v array object value k v value value value exports Cache Manager Path require Path Cache Manager Cache Manager Path require Path Cache Manager exports builder render cache Key cache Manager cache async Out nested Out cur Child nested Out callback err result cache Key exports get create Cache get Cache caches cache value builder Cache Manager value value err cache Key cache Name exports Component Args finalize Args set Key add Custom Event compile last Arg Index i el builder args func Target func Target func Args func Args args builder event event args args builder tag tag Args func Target func Target func Args func Args i length key key custom Events custom Events is User Assigned Key is User Assigned Key generate Render Tag Code exports create Id Node get Parent Key create Index Key get Parent get Child Key component Id Info el context context context builder builder builder is Html Element is Custom Tag parent Key parent Key unique Key transform Helper unique El Id id Name id parent key Expression key Expression bracketed Key Expression Name Name Declaration intialize Nodes AST current current el el el transform Helper transform Helper Node assigned Key assigned Key assigned Key nested Id Expression nested Id Expression nested Id Expression nested Id Expression id Expression id Expression id Expression id Expression el el parent Key parent Key parent Key id Name id parent parent transform Helper transform Helper key Expression key Expression Name Name bracketed Key Expression Declaration Node intialize is Auto Keyed id Expression id Expression nested Id Expression nested Id Expression id Node id Node id init component Id Info exports key generate Register Component Code context builder is Legacy Component component Module renderer Module component Props root Nodes is Legacy Inner Bind is Implicit Component has Tag Params is Split component Type component Type Node el el dependency Module component Node renderer Helper nodes template template Renderer Member render create Renderer Args event Args component Module is Split component Props component Props component Node marko Component renderer Helper create Renderer Args template Renderer Member template define Component Helper first Bind split implicit type props is Implicit Component is Split Component is Stateful Component generate Assign Render Code exports get Component Files fs path ext name No Ext is Entry file Match style Match component Match split Component Match Match dirname found Files dir Files i file filename filename filename filename ext dirname file file file file file styles file file browser File browser File exports is Upper add Delegated Event Listener add Custom Event Listener ATTACH DETACH KEY el el builder builder builder add Delegated Event Method add Delegated Event Args prop Value prop Name component Args is Custom Tag has Component Events attrs attr Name argument is Once c transform Helper transform Helper options options attr add Delegated Event Method add Delegated Event Args prop Name prop Value options argument attr Name is Once event Type event Type ATTACH DETACH KEY extra Args extra Args extra Args event Type event Type target Method target Method is Once is Once exports add Preserve preserve Handler preserve Handler preserve Body Handler preserve Body Handler el el context builder preserve Attrs component Id Info id Node preserve Node attribute attribute preserve Attr preserve Condition preserve Body Attr preserve Body Condition preserve Types i preserve Type event transform Helper transform Helper transform Helper transform Helper transform Helper body Only condition preserve Type preserve Type preserve Type preserve Type el el el el body Only preserve Attrs preserve Node preserve Node preserve Node id Node transform Helper transform Helper transform Helper transform Helper attribute attribute attribute preserve Condition preserve Body Condition preserve Type el key cid attribute attribute attribute attribute handler handler handler handler exports NO UPDATE ATTR SUFFIX PRESERVE ATTRS HELPER ADDED el context builder no Update Attrs attr Name attr Index attr Value real Attr NO UPDATE ATTR SUFFIX NO UPDATE ATTR SUFFIX attr Name attr Name attr Index real Attr real Attr attr Value no Update Attrs PRESERVE ATTRS HELPER ADDED PRESERVE ATTRS HELPER ADDED exports check Is Inner Bind cur Node el context builder component Module renderer Module bind Attr bind Attr Value has Widget Types is Legacy Inner Bind component Props id el bind Attr Value has Bound Component id is Legacy Inner Bind component Module renderer Module is Legacy Component root Nodes exports handle Style Element method To Property To Object handle Declaration enter path get Component Files esprima escodegen FLAG COMPONENT STYLE attrs lang has Style Block i attr name context context converted wrapped Src message error Index expression object component module Info module Info component Files dirname file file template Root root Nodes transform Helper tag Name tag Def Component Module walker is Implicit Component style El transform Helper transform Helper transform Helper method method cls el El style File root Node style El FLAG COMPONENT STYLE FLAG COMPONENT STYLE method method el wrapped Src El El El message expression transform Helper transform Helper transform Helper object dirname dirname file file node node node node node node context template Root type type type code virtual Path path key computed value kind method shorthand name properties pos message inline Id filename filename filename filename require Path require Path require Path require Path is Implicit Component root Nodes component Module renderer Module exports scoped Suffix el context file Position attrs attribute Name Attribute Name attribute scoped Suffix Attribute Name Attribute Name attribute Name exports Transform Helper set Has Bound Component Template get Template Module has Bound Component Template add Error get Component Args next Unique Id serialize Key get Id Expression get Component Id Info get Compile Context get Marko Components Require Path build Component El Id Call get Transform Helper Component Args Compiler get Require Path MARKO WIDGETS KEY HAS COMPONENT KEY component Next El Id el key context builder builder marko Key Attr component El Id component El Id message code marko Key Attr target component El Id el context builder dirname filename component Next El Id component Next El Id component Args component Args containing Component Node markoComponentsVar first Bind component Module renderer Module is Component HAS COMPONENT KEY require Path keySerialized component Id Info MARKO WIDGETS KEY MARKO WIDGETS KEY assign Component Id convert To Component handle Root Nodes handle Component Events handle Component Preserve handle Component Preserve Attrs handle Scoped Attrs handle Legacy Bind exports component Globals Node init Components Node await Reorderer component Globals Node init Components Node await Reorderer exports exports get Serialized Globals escape Ending Script Tag Reg Exp warp10 serialized Globals Lookup keys i len key value out Global serialized Globals csp Nonce nonce Attr out Global serialized Globals Lookup out Global csp Nonce serialized Globals escape Ending Script Tag Reg Exp key key exports BIND WIDGET KEY builder context body Func component Props bind Component Name bind Component Name BIND WIDGET KEY exports tag Definition Has Overriding Key Attribute get Transform Helper tag Def transform Helper builder get Widget From Out el el el context context get Widget From Out transform Helper widget component component exports target exports resolve From resolved Target require Path target resolved Target exports create Renderer Func renderer out out component state component Props exports FLAG WILL RERENDER BROWSER exports exports handle Await Before Render handle Await Finish INIT COMPONENTS KEY write Init Components Code Components Context async Fragment Out async Fragment Out out Global async Out event Args event Args async Fragment Out async Fragment Out handle Await Before Render handle Await Finish out out out async Out components INIT COMPONENTS KEY last timeout exports components Util component Lookup components Context component global Components Context key body Only existing Component key existing Component out key key component Id exports out exports generate Register Component Code get Component Id lasso Modules Client Transport shorthash ok context builder file Name is Legacy component Id component Id register Component Value Value define Widget component Module transform Helper is Split filename component Module transform Helper file Name define Widget Value Value component Id component Id component Id register Component filename id node exports Transform Helper exports get Transform Helper generate Register Component Code resolve From context transform Helper builder attrs types Object require Path filename component Module attr el context require Path component Module transform Helper types Object legacy filename require Path exports Async Value notify Callbacks done reject resolve next Tick callbacks callbacks i callback async Value Promise async Value err value err err err value value value callback async Value async Value value value error error callbacks callbacks callbacks settled settled settled prototype exports is Supported id after doc source El target El doc Fragment child Nodes i len af id doc Fragment target El after id d a e l g h k b f c d h g a d fs is Supported get Code exports safe Render Body callback request Data render Body complain is Client Reorder Supported Async Value async Value async Value value error timeout Id LAST OPTIONS client Reorder name timeout provider placeholder Renderer result Renderer error Renderer await Info id placeholder Id Attr Value old Emit before Render Emitted render Body Err async Last Out old Writer render Body target Out data data provider timeout err target Out data data data err err err callback callback value provider provider error timeout timeout timeout Id out out async Out async Out async Out await Info await Info await Info await Info await Info result Renderer render Body Err LAST OPTIONS render Body code name name name name last client Reorder data Provider after instances next Id clientReorderContext id out out emit timeout error finished writer writer exports handle Await client Reorder global async Out await Context await Info await Info await Info err handle Await awaitReordererInvoked last timeout name afRuntime writer exports builder provider provider provider argument exports exports Attribute Transformer add Error argument core Attr Handlers name func attribute Transformers node attr Name attr Transformer Func Node attr argument test attr node el attr Name context builder el node message name tag Name attributes argument params open Tag Only self Closed body pos exports argument attributes Statement argument test exports Statement argument Attr test Expression Statement Statement Statement Statement Statement test Expression exports builder params of Attr Attr to Attr params params params of Attr Attr to Attr exports argument attributes argument test exports is Marko Template is Valid Java Script Name parse resolve From path builder context args vars Name require Expression module Name mod Identifier absolute Path arg Path context Name Name Name Name context module Name module Name module Name require Expression require Expression mod Identifier Path absolute Path Name exports argument builder path Expression path argument exports resolve From fs argument builder path Expression path dirname txt argument dirname path path txt encoding exports argument builder path Expression path argument exports resolve From fs argument builder path Expression path dirname txt argument dirname path path txt encoding exports builder attributes def Attr macro Name el Node el Node macro Name macro Name macro Name exports exports builder context lhs lhs rhs rhs lhs lhs lhs lhs rhs rhs exports req resolve From func dirname resolved code target dirname target resolved req code exports parent is Top Level code statements statements code exports get Specifiers get Specifier Groups get Variable Name get Names match decomposed Imports without Path without Extension names Declaration specifiers Specifier Set module Specifier Groups root Variable specifier List Declaration specifier Specifier Set  p1 module Specifier Specifier names Declaration Declaration Specifier Set Specifier Set module Specifier module Specifier get Names specifier List module Specifier module Specifier Specifier Set decomposed Imports exported local module module value value value name name object property exports argument builder argument exports builder body expr current expr exports CONTROL FLOW ATTRIBUTES builder name attr name name name undefined undefined exports attribute attr index index attribute spread exports builder attr undefined undefined exports common Migrators migrator el context exports legacy Nested Tag Syntax match nested Tag Name legacy Nested Tag Syntax el tag Name exports to Tag to Tag is Require Call print JS SAFE TO PRINT ON ONE LINE builder parsed container id init Tag js Str Tag String declaration node node context context id from parsed insert Or init id id context context context context context context child child undefined node js Str from exports tag String tag String add Id Scoped Attr name name No Modifier modified Name attr modified Name context el exports enable Tag Params is Nested Tag tag Def has Params Flag child Node el context node el el context context child Node child Node exports params attr exports apply get Widget File resolve From attr value has Widget Types literal Value filename legacy should Migrate dirname literal Value dirname dirname dirname legacy legacy legacy legacy filename filename filename filename require Path require Path require Path require Path legacy Component Module legacy Renderer Module description type message initial template File component File exports build Type Of print JS builder builder Value body Value is dynamic Tag render Body Value condition node node context body Value body Value body Value body Value render Body Value context context context context condition undefined undefined node node raw Tag Name Expression exports print JS builder attr context value exports add Id Scoped Attr find Bound Parent name attr el el context exports find Bound Parent attr is HTML is Dynamic el exports print JS find Bound Parent name attr el context name argument value exports attr values existing Attr val val name exports Tags name Attr Name attr Tags name name exports enter is Widget El Id Call is Widget Member Expression value walker attr value value value value node name name value exports common Migrators migrator root context exports enter exit found walker el nonstandard exports replace Scriptlets enter print JS OUT IDENTIFIER REG render Call To Dynamic Tag replacement replacement replacement builder walker child child child node context context context context context context context context context context context context context context context context context context child child child child child replacement replacement replacement undefined undefined undefined undefined undefined undefined node el exports apply name description value exports print JS common Tag Migrator attributes builder attr el Node context context common Tag Migrator value exports await Tag Migration Tags builder attributes Name provider argument Tag child Name Tag el Node context tag Name tag Name tag Name Expression tag Name Expression argument exports common Tag Migrator builder el Node context common Tag Migrator tag Name tag Name Expression exports build Dynamic Tag print JS builder argument match provider Name method Expression scope Expression arg Assignments arg Expression arg Identifier call Args render Placeholder Attr render Timeout Attr render Error Attr then Node original Error Body Node node attr attr assignment obj parts child Node expression context argument provider provider provider method Expression arg Expression arg Expression context context context context context context context context arg Identifier call Args render Placeholder Attr render Timeout Attr render Error Attr then Node then Node undefined undefined undefined undefined placeholder Body timeout Body original Error Body error Body Node expression argument argument arg value value params params exports raw Tag Name Expression migrate Loop normalize Parts remap Replacer enter replace Status Body camel parse print JS common Tag Migrator builder builder Name Prefix iterator Name list Name iterator Result Name item Name parts init update test declarator Name from status Name all Identifer index Identifier length Identifier remaps remap Keys remap remap Str remap Strings remap Regexp callee visitor el Node context context parsed parsed builder result key key  str el el Node el Node el Node el Node context context context context context context context context context context context context context context context common Tag Migrator iterator Result Name iterator Result Name undefined undefined undefined parsed parsed builder to all Identifer index Identifier index Identifier length Identifier remaps remap remap Regexp visitor visitor exports argument argument argument argument argument argument params params params params value value value value value value block block Name from to step get Index get Length is First is Last key code print JS Tag common Tag Migrator builder raw Arg attributes parsed target arg dynamic Tag is Member Or Identifer Target complex Include Identifier Count identifier Name el Node el Node context context context context common Tag Migrator raw Arg undefined undefined undefined attributes dynamic Tag identifier Name Target Target Target spread value value raw Tag Name Expression raw Tag Name Expression complexIncludeIdentifierCount identifier Name exports render Call To Dynamic Tag common Tag Migrator builder Attr Args Call Expression Ast replacement attr el Node context context common Tag Migrator Call Expression Ast attr replacement value exports remove Dashes print JS common Tag Migrator builder name is Literal String target dynamic Tag target Str el Node context context common Tag Migrator name target dynamic Tag undefined undefined target Str raw Tag Name Expression exports common Tag Migrator attributes builder name value Node old Node context common Tag Migrator attributes value Node Node exports Tag print JS common Tag Migrator raw Arg attributes builder parsed target arg dynamic Tag el Node context context context common Tag Migrator raw Arg undefined attributes target dynamic Tag dynamic Tag spread value raw Tag Name Expression exports builder dynamic Tag el Node undefined dynamic Tag raw Tag Name Expression exports enter enter print JS builder attributes def Attr name name name params macro Walker value value child Args i template Walker attr param el Node el Node el Node name name name name value context params argument argument name name value value value exports print JS attributes argument builder Node argument context undefined Node Node exports enter template Root walker attr Value template Root exports exports camel name Reg builder migrate Imports match requested Tag Name identifier i Tag Path Path identifier Tag Tag identifiers paths migrateImports pascal tag String identifier Path lastMigrateImport exports Error build Identifier parse Expression parse Statement create Number Expression finish Name finish Prev Part remove Comments compiler integer Reg Exp number Reg Exp tokenizer Reg Exp error depth pipe Found Reg Exp Matches start part message name error Message error Message error Message error Message str str str end end token name str str str str str str str str str str error Message end end start Expression separator Expression iterator Expression from Expression to Expression step Expression Name name Name value Name status Name Init Test Update name name name name name name name name name name name name name name pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern pattern code loop Type loop Type loop Type loop Type Name Name separator separator status Name status Name iterator is Array name Name value Name from to step init test update exports Code Writer Code Generator code Generator writer node node options exports to Attributes Or Spread print JS builder args callee args Length out Index callee Property el arg prop prop val undefined tag Attrs tag Name context render raw Tag Name Expression exports name value value spread is Valid Java Script Name print JS common Tag Migrator attributes builder first Child last Child name val scriptlets attr scriptlet node el Node context context common Tag Migrator name scriptlet node value value value exports define Renderer marko template get Template Data renderer Props template Data out def template Props out out out template Data input render exports patch Response assign express sacrificial App res req app response data data res exports app req res marko clea Resolve Path Cache Reload Template hot Reload Proxy create Hot Reload Proxy get set endsWithMarkoExtension normalize Extension handle File Modified node Path fs node Require modified Id HOT RELOAD KEY module Path Cache keys silent silent hot Reload Data template Path template Path latest originals target Func old Create Template original Template i i require Extensions node Require Extensions basename dir path path func template method Name require Extensions extension filename module Path Cache path path path path path path path template Path latest runtime render Func original Template original Template node Require Extensions require Extensions dir hotReloadEnabled MARKO HOT RELOAD modified Id modified Id latest latest originals HOT RELOAD KEY method Name meta t enable i cache handle File Modified exports create Out load fix Flush Outgoing Message create Out load template Path exports exports load Source get Cached Template get Previous Template create Render Proxy Load node Path fs Module compiler Path marko Compiler cwd fs Options parsed js File Path found Precompiled last Arg Options cached cached template Module ext target File Precompiled target File Debug cached Template write To Disk compiled Src target File Template template Path template Path template Path compiled Src path options options template template Src dirname compiler Path template Path template Path template Path template Path template Path template Path template Path template Path template Path template Path template Path template Path template Path template Path template Path template Path js File Path js File Path template Src template Src template Src Options options options options options compiled Src compiled Src compiled Src target File Precompiled target File Precompiled target File Precompiled target File Debug target File Debug target File Debug cwd cwd data out fs Options fs Options target File template encoding exports paths filename template Path exports exports install normalize Extension compile get Loaded Template marko Require Extension install path resolve From fs fs Read Options MARKO EXTENSIONS write To Disk target File target File target Dir is Up To Date filename temp File cached require Extensions compiler Options extensions cached Template dirname marko Compiler Module Path marko Compiler compiled Src extension extension template Path marko Compiler compiler Options path module filename options compiler Options compiler Options compiler Options compiler Options template Path template Path template Path template Path template Path fs Read Options fs Read Options fs Read Options fs Read Options fs Read Options template Src template Src target File target File target File target File target File target File target File target File target Dir temp File temp File compiled Src compiled Src filename filename filename dirname marko Compiler Module Path marko Compiler extension extension encoding require Templates exports MARKO EXTENSIONS MARKO EXTENSIONS extension install get Extensions get Component Defs Render Result get Component get Components after Insert get Node get Output to String dom Insert component Defs component Defs components component out components Context proto is Shadow result out component component doc doc proto out out components components components exports document prototype remove Listener handle Custom Event Method Listener resolve Key Helper resolve Component Id Helper process Update Handlers check Input Changed Component subscribe To emit get El Id get El get Els get Component get Components destroy destroyShallow is Destroyed state state set State set State Dirty replace State input input setInput force Update queueUpdate update isDirty reset should Update emitLifecycleEvent scheduleRerender rerender detach removeDOMEventListeners rawState setCustomEvents el els complain dom Insert Create Out get Components Context components Util component Lookup emit Lifecycle Event destroy Node Recursive Event Emitter Render Result Subscription Tracker inherit update Manager morphdom event Delegation dom Data components By Node DOM CONTEXT KEY slice NON COMPONENT SUBSCRIBE TO OPTIONS emit ELEMENT NODE target Component target Method handler Method Name property Name Value old Value old Keys Keys len i i key subscriptions subscriptions subscribe To Options custom Events target Method Name target Method Name is Once is Once extra Args extra Args args resolved Key keyed Element keyed Component els root Node root Node lookup root root nodes state state state state state state State old Input input input self renderer renderer doc global Data create Out out components Context global Components Context result target Node event Listener Handles Custom Events event Type remove Event Listener Handle component component component target Method Name args extra Args key key index index state Changes old State existing Component old Input Input id component component component args args args target Component key key key key key key index index index index prop Name Value old Value old Input old Input Input Input Input target subscribe To Options target Method Name extra Args event Type event Type resolved Key i el root Node root Node root Node lookup node node node undefined k k name name value value State out out out state state input input input event Arg1 event Arg2 global Data target Node doc components Context remove Listener component Proto Component Event Emitter add Destroy Listener id state state state rootNode rootNode subscriptions subscriptions subscriptions domEventListenerHandles domEventListenerHandles bubblingDomEvents customEvents customEvents scope scope renderInput renderInput renderInput input input input input mounted global global destroyed destroyed updateQueued updateQueued updateQueued dirty dirty dirty dirty dirty settingInput settingInput settingInput document document keyedElements keyedElements keySequence isComponent detached context CONTEXT KEY rerenderComponent isHydrate event Type prototype el Id update destroy exports Component Def nextKey preserveDOMNode el Id nextComponentId d type component Util attach Bubbling Event add Delegated Event Handler extend Key Sequence FLAG WILL RERENDER BROWSER FLAG OLD HYDRATE NO CREATE key Sequence lookup id id type Name input extra is Legacy state component Props flags component undefined Prop Names scope custom Events component component Id global Components Context key event Name handler Method Name is Once extra Args type Name id is Legacy input input component component Props custom Events scope globalComponentsContext component component id id domEvents domEvents isExisting renderBoundary flags flags nextIdIndex keySequence keySequence preservedDOMNodes preservedDOMNodes key prototype updateQueued global global undefined Prop Name state input bubblingDomEvents global boundary deserialize exports Components Context initComponents get Components Context Global Components Context component Defs out out parent Components Context component Defs doc nestedContexts nestedContexts components components components components globalContext out componentDef prototype exports getComponentsContext Global Components Context createKeySequence next Component Id Provider Key Sequence out out preservedEls preservedElBodies renderedComponentsById rerenderComponent nextComponentId prototype exports Key Sequence nextKey lookup current Index lookup key prototype exports Server Component el Id updated Input id el Id input input out out out id customEvents scope updatedInput updatedInput updatedInput input input input input state state type Name bubblingDomEvents bubblingDomEventsExtraArgsCount get El Id exports get set ensure State reset replace set to JSON extend proto self state raw State raw State forced Dirty State state property Name component property Name property Name value proto key key undefined name raw State component raw raw dirty dirty dirty old old old changes changes changes forced forced forced name name name prototype exports handle Node Attach prevent detach handle Node Detach event Delegation delegate Event get Event From El event Name event Name target target target out data attach Targets i node parent Node node node components Context node node node node node node event Name event Name event Name event Name target target target attachTargets handleNodeAttach handleNodeDetach Component Def component Id global Context component Def out component Def component key componentDef component Id exports Component Def FLAG WILL RERENDER BROWSER FLAG OLD HYDRATE NO CREATE global Context component Id component Def out runtime Id component Def componentDef flags flags flags runtime Id renderBoundary exports Component Component State Base State Base Component inherit type id component id Component Base Component component State Base State prototype prototype isComponent State renderer exports get set counter seed id Weak Map id vPropsByDOMNode vElementByDOMNode componentByDOMNode detachedByDOMNode keyByDOMNode exports exports exports get Event From El delegate Event add Delegated Event Handler add Delegated Event Handler To Doc noop components Util runtime Id component Lookup get Marko Props From El listeners Attached Key delegated Events virtual Props virtual Props event Info target Method target Component Id is Once extra Args target Component target Func body listeners propagation Stopped old Stop Propagation cur Node prop Name el event Name event Name node target event event Type event Type doc el node node node event event event event target Component target Component cur Node cur Node prop Name prop Name target event Type event Type delegated Events doc event Type event Type listeners Attached Key stop Propagation handleNodeAttach handleNodeDetach delegateEvent getEventFromEl addDelegatedEventHandler init c r rc r c rc components Util init Components registry id initClientRendered get Component El init register safe Replacer JSON safe JSON add Components From Context get Rendered Components write Init Components Code warp10 safe Reg JSON Exp nested Contexts components i i i component Def id component flags state input type Name custom Events scope bubbling Dom Events type Index has Props component Keys len len key key undefined Prop Names state Keys extra components Context runtime Id components types Lookup types Array rendered Components rendered Components csp Nonce nonce Attr match json components Context components types Lookup types Array out from Out target Out should Include All safe Reg JSON Exp safe Replacer JSON nested Context components components types Lookup types Lookup types Array types Array type Name component state key components Context from Out should Include All csp Nonce rendered Components rendered Components out state input type Name type Name id customEvents scope bubblingDomEvents bubblingDomEventsExtraArgsCount b d e f l p r r s u w w length t write Init Components Code get Rendered Components index Server Component Boundaries invoke Component Event Handler add Event Listener Helper add Event DOM Listeners init Component init Client Rendered init Server Rendered hydrate Component And Get Mount warp10 Finalize event Delegation win Document create Fragment Node components Util component Lookup add Component Root To Keyed Elements Component Def registry dom Data components By Node DOM server Rendered Globals server Component Root Nodes keyed Elements By Component Id FLAG WILL RERENDER BROWSER runtime Length comment Value first end Node start Node parts key marko Key marko Props separator Index method event Listener args remove Listener component component is Existing id dom Events event Listener Handles event Type target Method Name event El is Once extra Args i component Def component Defs types Array runtime Id globals mount component Mount Fns component Id root Node node runtime Id stack component component target Method Name target Method Name args el el event Type event Type is Once is Once listener extra Args handles component Def component Def doc doc doc doc component Defs rendered Components runtime Length node node end Node end Node end Node keyed Elements key root Node root Node component Id start Node separator Index marko Props marko Props runtime Id runtime Id runtime Id stack component component component component args args args event event Type event Type event Type event Type event Type event Listener event Listener event Listener target Method Name target Method Name el is Once is Once remove Listener event El extra Args event Listener Handles doc doc doc doc doc doc doc doc doc doc doc component Def component Def component Def component Def component Def component Def rendered Component rendered Components globals types Array server Rendered Globals registry owner Id owner Id component Id marko Key document document id domEventListenerHandles mounted concat rootNode keyedElements initClientRendered initServerRendered ready id Reg Exp args self match key root El self arg arg arg key key root El window patch Component get set ensure State reset replace set to JSON extend proto self state raw State raw State forced Dirty State state property Name component proto property Name key key undefined name raw State property Name component raw raw dirty dirty dirty old old old changes changes changes forced forced forced name name name prototype exports def def renderer exports complain marko make Renderable get Components Context components Util component Lookup modern Renderer resolve Component Key renderer template components Context global Components Context component is Receiving Input Props key template Data template out out out out out out out key parent Component Def Props Props Props Props Props widget State template Data template Data id rendering Logic renderer renderer key widget State render Body widget Config isRenderer create Out template exports Component Component get get get get State j Query ready complain init on Render on Before Update on Update on Before Destroy on Destroy original Update self config create Out renderer Object renderer Func out id doc id doc Component Base Component proto proto proto proto State Base State input input out out Component init prototype prototype isLegacy constructor constructor get Widget get Widgets legacyExplicitUpdate legacyExplicitUpdate update first Render didUpdate didUpdate input input on Mount on Update on Destroy isComponent State create Out render render renderer renderer render Sync exports isComponent isComponent isWidget isWidget renderer render render Sync template exports patch Template Template get Root Deps attach Deps And Components To Template read get Init Module resolve Dep parse Dependency String patch path Resolve From env production deps deps init Module result components meta root resolve From resolve From resolve From tag ext req module virtual Path registrations code match key key template context context context dep dep tag Path target component path components root string Template template context context context context init Module result result dep dep root root root root root tag Path tag tag tag deps components components code string depsArray type type type type type path path path path path run run run concat deps components id virtual Module virtual Path get Dependencies get Deps resolve Dep patch patch Template Template get Components Context components Context component Def out c exports w c r r c rc modern Marko Component complain Widget Widget Proto Render Result type Name Input Input load define Component define Widget define Renderer renderable make Renderable Widget on Init Widget get Widget El init Widgets isReceivingNewInput set Props rerender get Widget get Widgets modern Marko define Component define Widget define Renderer renderable make Renderable write Init Widgets Code get Rendered Widget Ids get Rendered Widgets create Renderer Func get Components Context components Util component Lookup registry modern Renderer resolve Component Key handle Begin Async begin Component end Component w10 NOOP WIDGETS BEGIN ASYNC ADDED KEY type Name is Split out Global widget Body widget State widget Config components Context global Components Context component is Rerender id parent Component Def owner Component Def owner Component Id key custom Events is Fake Component component Def parent Legacy Component Def v Component Node template Render Func component Props handle Begin Async out out out out key key parent Component Def id id input input type Name type Name type Name custom Events custom Events owner Component Id owner Component Id components Context component component owner Component Def is Split component Def component Def component Def WIDGETS BEGIN ASYNC ADDED KEY assignedComponentDef rerenderComponent id keyedElements updateQueued state widget Config legacyBody legacyComponentDef legacyComponentDef component component component isExisting isLegacy t customEvents scope componentDef exports dom Ready Callback dom Ready dom Content Loaded Scroll Check bind Ready ready is Ready ready Bound Window Document listeners i len listener toplevel win document doc doc callback Obj dom Ready dom Content Loaded dom Content Loaded dom Content Loaded dom Content Loaded dom Content Loaded dom Content Loaded dom Content Loaded dom Content Loaded Scroll Check doc Obj callback document exports ready patch Component register load get Component create Component complain define Component loader registered loaded component Types target Component Component Name Match Name Old Component component Id def type Name type Name type Name is Legacy is Legacy is Legacy id type Name type Name type Name type Name type Name is Legacy is Legacy Component component Id type Name type Name type prototype register createComponent Server Component create Server Component create Component copy Props SERVER WIDGET KEY Base Server Component rendering Logic Props Server Component component rendering Logic rendering Logic id input out type Name custom Events scope rendering Logic Props rendering Logic SERVER WIDGET KEY isServer createComponent resolve Component Key handle Begin Async create Renderer Func components Util component Lookup emit Lifecycle Event Components Context get Components Context registry copy Props is Server begin Component end Component COMPONENT BEGIN ASYNC ADDED KEY parent Out async Out components Context components Context on Input type Name is Split is Implicit Component should Apply Split Mixins out Global global Components Context component is Rerender parent Component Def owner Component Def owner Component Id key rendering Logic Props component Def key parent Component Def event template Render Func component Props rendering Logic key key handle Begin Async out out out out out out out parent Component Def rendering Logic id id input input input input input type Name type Name custom Events custom Events owner Component Id owner Component Id rendering Logic Props component component component component component on Input components Context owner Component Def is Split is Implicit Component component Def component Def components COMPONENT BEGIN ASYNC ADDED KEY rerenderComponent updatedInput updateQueued id global isExisting componentDef exports resolveComponentKey handleBeginAsync update Unbatched Components schedule Updates update Components batch Update queue Component Update updates Scheduled batch Stack unbatched Queue next Tick i component batch batch batch Stack Len queue func component unbatched Queue update Unbatched Components batch component component length queue queue queueComponentUpdate batchUpdate get Parent Component El get Component El emit Lifecycle Event destroy Component Node destroy Node Recursive next Component Id next Component Id Provider attach Bubbling Event get Marko Props From El normalize Component Key add Component Root To Keyed Elements dom Data components By Node DOM keys By Node DOM v Elements By Node DOM v Props By Node DOM marko UID runtime Id component Lookup Document EMPTY OBJECT node lifecycle Event Methods listener Method component To Destroy cur Child component Id v Element repeated Elements Key node node node el el doc component component event Type event Arg1 event Arg2 component Def handler Method Name is Once extra Args key key parent Id keyed Elements root Node component Id node node node node node node node el el el el component component event Arg1 event Arg1 event Arg2 event Arg2 event Type key key cur Child virtual Props i event Name key key component Id runtimeId componentLookup getComponentForEl emitLifecycleEvent destroyComponentForNode destroyNodeRecursive nextComponentIdProvider attachBubblingEvent getMarkoPropsFromEl addComponentRootToKeyedElements normalizeComponentKey next Component Id Provider attach Bubbling Event FLAG WILL RERENDER BROWSER prefix next Id component event Index out component Def handler Method Name is Once extra Args extra Args bubblingDomEvents nextComponentIdProvider isServer attachBubblingEvent destroyComponentForNode destroyNodeRecursive set Create Out create Out create Out Func global Data global Data setCreateOut exports resolve El before Remove append To prepend To replace replace Children Of insert Before insert After extend components Util destroy Component Node destroy Node Recursive helpers insert Before insert After remove Child el Id el el el el el el cur Child next Sibling el reference El el Id reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El reference El el el el el el el cur Child target inner HTML exports Event Emitter exports assign into i source k k exports complain is Array i o i k k k v exports complain is Negative is step i i exports existing Array input target Property target Property exports exports merge into source k k k exports merge Nested Tags input input render Body exports RENDER BODY TO JSON is List deferred Renderer create Deferred Renderer resolve Renderer s f d t cl complain remove Dashes Components Context get Components Context Component Def w10 NOOP is Array FLAG WILL RERENDER BROWSER IS SERVER i value renderer Func renderer renderer result component render Body other Attrs render is Fn flags will Rerender is W10 NOOP preserve components Context parent Component Def global Context Names helpers arg arg Names input out handler handler arg Names Names name name input input input out out out out out out out renderer Func handler handler array array array array i callback callback tag tag other Attrs key key key key key key key component component component props props attrs attrs attrs attrs attrs component Def component Def custom Events custom Events preserve args renderer renderer renderer attr Key assignedComponentDef assignedComponentDef componentDef componentDef to JSON exports write write State escape Ending Comment Async Stream sync is Sync getOutput get Output to String getResult begin Async doFinish end handleChildDone flushNext on once on Last next emitLast emit remove Listener prepend Listener pipe error flush create Out element begin Element end Element comment text beginFragment endFragment getNode then c Event Emitter String Writer Buffered Writer Document Render Result attrs Helper escape Xml Writer Global events events events events state state state state state current Writer current Writer Writer Stream remaining remaining parent Out parent Out timeout Id next Writer next Stream last Array last Array i last Callback stack name writer Out str str tag Name preserve node html out promise proto root stream writer writer events text global parent Out should Buffer timeout data current Writer timeout Id callback callback callback callback callback event event next type type arg events events events stream e element Attrs element Attrs str str str str name key preserve cur El reject result promise fn fn Err fn Err undefined root stream stream stream stream stream stream writer writer writer writer writer writer events events finished finished attributes global state ended ended remaining lastCount last last parentOut data sync sync stack stack name name timeoutId timeoutId node node elStack elStack elStack components assignedComponentDef assignedComponentDef assignedKey assignedKey assignedCustomEvents assignedCustomEvents TIMEOUT INCLUDE STACK INCLUDE STACK enable Async Stack Trace constructor document isOut result next next next parent Writer out parent Out inner HTML prototype w elementDynamic beginElementDynamic endElement exports Buffered Writer write flush end clear wrapped Stream buffer buffer buffer buffer wrapped prototype exports String Writer write to String str str prototype exports Readable write end read Template create Out stream Async Stream make Renderable stream template data global Data should Buffer out path render Func options global Data writer parent Out buffer data data out t d shouldBuffer rendered rendered path  shouldBuffer meta create Out prototype exports replace escape String escape Xml Helper escape Xml escape Xml Attr el Test el Test Replace attr Test attr Replace replacements match str regexp Test regexp Test regexp Replace regexp Replace value value value str regexp Replace regexp Replace regexp Replace replace value value value regexp Test regexp Test el Test el Test Replace attr Test attr Replace escape String escape Xml escape Xml Attr attr escape escape String escape Xml Attr stringified Attr Test stringified Attr Replace type name value should Escape value value value stringified Attr Test stringified Attr Replace exports is Valid Attr Name out attr Helper helpers invalid Attr Name Characters valid Attrs invalid Attrs attr Name attr Name attr Name attr Name exports attr Name attr Name merge Attrs complain attrs Helper result current Attrs i source current Attrs current Attrs k k exports List extend STYLE ATTR ATTR escape escape Xml escape Xml Attr attr Helper attrs Helper merge Attrs Helper style Helper escape Ending Script Tag Reg Exp escape Ending Style Tag Reg Exp str i common Helpers escape Script assign Props csp Nonce nonce Attr arg escape Ending Script Tag Reg Exp escape Ending Style Tag Reg Exp style style STYLE ATTR ATTR ATTR Names Names exports common Helpers csp Nonce assign Props props x xa xs xc a as am sa ca cl assign Props p create Out Async Stream global Data parent state buffer create Out t create Writer Template createOut Async Stream enable Async Stack Trace win set Immediate queue message Name source fn fn message Name exports exports safe Render render To String render Sync render Create Out extend actual End render Func create Out local Data local Data render render render global Data global Data out out should Buffer should End render Func Data Out should End Data Data Out Out err global Data global Data global Data global Data global Data out out out out out callback callback render render local Data local Data local Data undefined should Buffer should End target end end create Out template template template exports State Async Builder VDOM bc preserveComponent beginNode element elementDynamic n node text comment html begin Element beginElementDynamic beginFragment endFragment end Element end handleChildDone doFinish next emitLast error begin Async create Out flush getOutput getResult on once emit remove Listener sync is Sync on Last getNode to String then c Event Emitter vdom Element V Document V Fragment Comment V Text V Component V Fragment V virtualize HTML Render Result Document morphdom attrs Helper EVENT UPDATE EVENT FINISH v Component v Component element element element element clone type vdom Node fragment stack remaining remaining parent Out parent Out state state state state last Array last Array i last Callback document Fragment async Out events events events node vdom Tree doc Fragment html child next Sibling container out promise proto tree global Data parent Node parent Out v Component v Component child child element element element element child Count child Count child Count child Count child Count child Count attrs attrs tag Name tag Name key key component component flags flags props props clone node node html vdom Node fragment EVENT FINISH EVENT FINISH next e EVENT UPDATE EVENT UPDATE callback callback callback callback callback event event type type arg events events doc doc doc vdom Tree reject result promise fn fn Err fn Err undefined events tree finished finished remaining lastCount last parentOut data state parent parent parent parent global stack sync sync vnode vnode components assignedComponentDef assignedComponentDef assignedKey assignedKey assignedCustomEvents assignedCustomEvents isOut document ownerComponent out parent Out result last is VDOM prototype e be endElement ee t write w h exports Comment V actualize cloneNode Node V inherit node Value value node Value Comment V Node V nodeValue nodeType prototype exports Component V Node V inherit component key owner Component preserve Component V Node V key component ownerComponent preserve nodeType prototype exports Document V Fragment Clone Document V Fragment cloneNode actualize Node V inherit extend other out other Document V Fragment Node V parentNode nextSiblingInternal out nodeType DocumentFragment prototype prototype exports convert Attr Value assign set Attribute remove Attribute Element V Clone Element V cloneNode e ed n actualize hasAttribute get get virtualize Element dom Data v Element By Node DOM Node V inherit NS XLINK ATTR XLINK HREF xmlns Reg Exp to String FLAG IS SVG FLAG IS TEXTAREA FLAG SIMPLE ATTRS FLAG CUSTOM ELEMENT define Property ATTR HREF EMPTY OBJECT child child namespace URI tag Name tag Name attributes attributes flags flags el attr Value type type value value value proto namespace element attr Count i attr attr Name attr Namespace URI vdom El remove Preserved Attributes from Flags to Flags attrs props old Attrs type value value a b el el namespace URI namespace URI name name other tag Name attrs key owner Component child Count flags props node virtualize Child Nodes value value value value value key key name name name name name namespace URI namespace URI namespace URI namespace URI namespace URI child Count child Count tag Name tag Name tag Name attrs attrs attrs owner Component flags props props props node node el el el attributes type type attr Value attr Value attr Value attr Value attr Value NS XLINK ATTR HREF ATTR HREF attr Name attr Name attr Name attr Name attr Name Element V Node V proto proto vdom El from El from El from El from El to El old Attrs ATTR XLINK HREF key firstChildInternal parentNode nextSiblingInternal key key attributes attributes properties properties namespaceURI namespaceURI namespaceURI namespaceURI nodeName nodeName flags flags valueInternal valueInternal valueInternal constId constId isTextArea isTextArea ownerComponent ownerComponent nodeType value prototype prototype createElementDynamicTag removePreservedAttributes ATTR XLINK HREF attr Name virtualize Name id css Text morphAttrs exports Fragment V actualize dom Data keys By Node DOM v Element By Node DOM Node V inherit create Fragment Node fragment key owner Component preserve fragment fragment Fragment V Node V key ownerComponent preserve nodeType prototype exports Node V VNode firstChild nextSibling appendChild finishChild first Child first Child nested First Child next Sibling parent Node child Value last Child finalChildCount childCount firstChildInternal firstChildInternal lastChild lastChild parentNode parentNode nextSiblingInternal nextSiblingInternal ownerComponent valueInternal prototype exports Text V actualize cloneNode Node V inherit value Text V Node V nodeValue Text nodeType prototype exports Attributes style Attr Attr attributes name name name exports dashed Names type styles i len next value name Dashed style name exports e t ca vdom Element V Text V common Helpers extend List i helpers Names common Helpers as exports Template create Out Async Builder VDOM make Renderable Template prototype path func global Data parent parent Out Template prototype create Out t path  meta create Out prototype Template createOut first Child last Child parent Node next Sibling nodes insert Before insert Into remove create Fragment Node begin Fragment Node helpers insert Before first Child last Child parent Node nodes current actual Reference fragment Prototype fragment fragment detached Container start Node start Node next Node parent Node parent Node current current Child Node actual Reference node node reference Node Parent Node fragment Prototype start Node start Node parent Node parent Node parent Node next Node next Node node Type start Node end Node fragment fragment detached Container finishFragment finishFragment createFragmentNode beginFragmentNode insert Before insert After next Sibling first Child remove Child next next fragment node node node node node reference Node reference Node parent Node parent Node parent Node parent Node reference Node node node node insertBefore insertAfter nextSibling firstChild removeChild is Auto Key compare Node Names on Node Added insert Virtual Node Before insert Virtual Component Before morph Component detach Node destroy Component morph Children morph El morphdom special El Handlers components Util existing Component Lookup destroy Node Recursive add Component Root To Keyed Elements normalize Component Key Element V virtualize Element morph Attrs event Delegation fragment fragment helpers dom Data keys By Node DOM component By Node DOM v Element By Node DOM detached By Node DOM insert Before insert After next Sibling first Child remove Child create Fragment Node begin Fragment Node ELEMENT NODE TEXT NODE COMMENT NODE COMPONENT NODE FRAGMENT NODE FLAG PRESERVE is Rerender Browser key Sequences real Node root Node root Node detached Nodes cur From Node Child cur To Node Child owner Component component cur To Node Key Original key Sequence content end Node depth cur From Node Type is Compatible node Name Id special El Handler detached From Component component To Destroy key key key from El from El to El to El node node components Context components Context v Node reference El parent El owner Component owner Component owner Component owner Component parent Component parent Component parent Component parent Component v Component v Component reference Node reference Node Parent El component component component parent Node from Node from Node to Node to Node v From El to El Key doc key key key key key key node node node node node node node node node node node components Context components Context doc real Node real Node real Node real Node reference El parent El v Node parent Component parent Component parent Component parent Component parent Component parent Component parent Component parent Component parent Component parent Component parent Component parent Component reference Node reference Node Parent El root Node root Node root Node root Node root Node root Node root Node component component component component component component component v Component v Component from Node from Node from Node from Node from Node from Node from Node from Node from Node from Node from Node from Node from Node from Node from Node from Node from Node from Node from Node from Node from Node cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur From Node Child cur To Node Key cur To Node Key cur To Node Key cur To Node Key cur To Node Key cur To Node Key cur To Node Key cur To Node Key cur To Node Key cur To Node Key cur To Node Key cur To Node Key cur To Node Key cur To Node Key cur To Node Key cur To Node Key cur To Node Child cur To Node Child cur To Node Child cur To Node Child cur To Node Child cur To Node Child cur To Node Child cur To Node Child cur To Node Child cur To Node Child cur To Node Child cur To Node Child cur To Node Child cur To Node Child cur To Node Child cur To Node Child owner Component owner Component owner Component owner Component owner Component owner Component owner Component owner Component owner Component owner Component owner Component owner Component owner Component owner Component owner Component from Component from Component from Component cur From V Node Child cur From V Node Child cur From V Node Child cur From V Node Child cur From V Node Child cur From V Node Child cur From V Node Child fragment fragment fragment end Node matching From El matching From El matching From El matching From El matching From El matching From El matching From El matching From El undefined undefined from Next Sibling reference Component from El from El from El v From El to El to El to El to Node key rootNode rootNode cur To Node Key node Value to El Key exports sync Attr Prop Special El Handlers OPTION BUTTON INPUT TEXTAREA SELECT Value first Child old Value i selected cur Child from El to El name name name from El from El from El from El to El to El to El to El name value value node Value selected Index prototype exports remove Preserved Attributes extend preserved Attrs attrs props attrs removePreservedAttributes virtualize Child Nodes virtualize virtualize HTML Node V Comment V Document V Fragment Element V Text V Component V Fragment V Document special Html Regexp cur Child cur Child vdom Doc Fragment container vdom Fragment Node prototype type node node vdom Parent html doc cur Child cur Child node node virtualize Child Nodes vdom Doc Fragment html document inner HTML t c appendDocumentFragment VComment VDocumentFragment VElement VText VComponent VFragment virtualize virtualizeHTML defaultDocument clear Cache register register From File taglib Finder taglib Lookup taglib Loader taglib taglib taglib Props taglib Path taglib Path taglib Path taglib Path taglib taglib taglib taglib Props clear Cache register register From File build Lookup exclude Dir exclude finder lookup loader reset exists Cached get Module Root get All Dependency Names already Added add Taglib find clear Cache exclude Dir exclude taglib Loader node Path lasso Root resolve From scan Tags Dir Dependency Chain lasso Caching FS find Cache excluded Dirs excluded Packages map found added helper root Dirname root Pkg cur Dirname taglib Path taglib Path components Path taglib taglib parent Dirname path dirname dirname name name name name name pkg registered Taglibs dir path dirname dirname map taglib Path taglib Path taglib Path taglib Path taglib taglib taglib taglib taglib cur Dirname cur Dirname cur Dirname components Path components Path components Path components Path components Path root Pkg registered Taglibs name name name name found Taglib Packages dirname dir reset find clear Cache exclude Dir exclude Attribute name type type required allow Expressions set Flag pattern exports Dependency Chain append to String str array exports Imported Variable target Property expression exports Nested Variable name exports Property name type value exports Tag create Custom Tag create Custom Tag Node Factory Each Variable Each Imported Variable Each Transformer has Transformers add Attribute to String Each Attribute get Attribute has Attribute add Nested Variable add Imported Variable add Transformer set Body set Body Property add Nested Tag Each Nested Tag has Nested Tags Each Migrator get Node Factory to JSON set Taglib Each Entry ok path marko Modules attributes attribute i len pattern Attribute key key node Factory code Generator Module Path loaded Code Generator el tag Def tag Def el tag Def file Path callback callback Obj Obj Obj Obj Obj Obj imported Variable transformer k attr attr Name attr Name attr Name nested Variable nested Tag path code Generator Module Path loaded Code Generator file Path file Path dir migrators migrator Paths attributes transformers pattern Attributes dynamic Attribute target Property target Property target Property noMerge noMerge vars nested Variables imported Variables key key taglib Id taglib Id name params body body Property nested Tags is Nested Tag path nodeFactory taglib Path exports Taglib handle add Attribute get Attribute get Migrator add Tag add Text Transformer add Transformer Each Tag add to JSON Each Entry ok path path loaders marko Modules imports Lookup attribute i len pattern Attribute imported Taglib taglib imported Taglib imported Taglib imported Taglib taglib nested Imported Taglib file Path attribute name path path tag tag transformer transformer Obj imports Lookup imports Lookup imports imports imports id path path file Path file Path dirname tags tags text Transformers text Transformers transformers attributes attributes pattern Attributes pattern Attributes input Files Lookup migrator taglib Id exports Transformer get Func to String next Transformer Id marko Modules transformer Clazz instance instance id id name tag path priority func func func func properties exports get put clear cache key key value key get put clear load Taglib From Props load Taglib From File clear Cache create Taglib load Tag cache types loaders Dependency Chain tag taglib taglib Props file Path file Path file Path tag Props taglib taglib Props file Path tag tag Props clear Cache create Taglib load Taglib From Props load Taglib From File load Tag fs strip Json Comments fs Read Options json taglib Props path fs Read Options json encoding read File Sync Attr Loader load type target Property Value pattern allow Expressions preserve Name required remove Dashes description set Flag set Context Flag ignore autocomplete deprecated name html load Attribute From Props assert raptor Regexp property Handlers types create Error attr attr attr attr attr attr attr attr attr attr attr attr pattern Reg Exp attr Loader attr Name attr Props dependency Chain attr dependency Chain dependency Chain attr Props attr Props err name attr dependency Chain type type ref target Property Value pattern allow Expressions preserve Name required remove Dashes set Flag set Context Flag ignore autocomplete deprecated name html is Supported Property exports ok Each Entry loaders attr attr Name attr Props parent dependency Chain attr Name attr Props attr value exports load Tag From File json File Reader types cache loaders ok tag tag Props file Path file Path file Path file Path file Path tag tag tag Props exports Tag Loader exists remove Dashes has Attributes path priority name name name properties add Transformer load name From Attribute handleVar renderer template attributes migrator code Generator node Factory preserve Whitespace transformer vars body type nested Tags escape Xml Body body open Tag Only no Output autocomplete parse Options deprecated parse Attributes attribute Groups html html Type feature Flags is Supported Property load Tag From Props ok property Handlers is Object Empty node Path marko Modules body Reg Exp safe Name Each Entry marko Compiler create Error types loaders dirname dirname dirname dirname dirname dirname tag tag tag tag tag tag tag tag tag tag tag tag tag tag tag transformer path path path path path properties dependency Chain dependency Chain parts parts has Nested Tag has Attr nested Tag Target Property attr Props tag Props prop Name Dashes type attr Name attr attr attr nested Tag nested Tag is Nested Tag Repeated nested Tag Name Name params i imported expression file Path attribute Groups tag Loader path str tag Props tag Props tag Loader value transformer Path v i Name Value nested Tag Name nested Tag Def name tag dependency Chain path path name name dirname dirname dirname dirname dirname dirname value value value value value value value value value value value value value value value value value value value value k k k transformer tag Props tag Props tag Props tag Props nested Variable prop Name Dashes prop Name Dashes prop Name Dashes prop Name Dashes part part part attr Name attr Props attr attr attr nested Tag nested Tag nested Tag nested Tag tag v Name params Value expression imported nested Tag Def dependency Chain dependency Chain dependency Chain err path path path priority name name name name name name properties k k k k k k tag dependency Chain file Path dirname type type type type type type type type target Property target Property target Property preserve Name attributes name From Attribute is Repeated renderer template code Generator Module Path node Factory Path preserve Whitespace expression escape Xml Body body open Tag Only no Output autocomplete parse Options deprecated parse Attributes attribute Groups attribute Groups html html Type feature Flags exports is Supported Property load From File json File Reader types cache loaders ok taglib taglib Props file Path file Path file Path file Path file Path taglib taglib taglib Props exports Taglib Loader exists path path add Transformer load handleTag attributes tags tags Dir taglib Imports migrator text Transformer taglib Id transformer attribute Groups load Taglib From Props ok types node Path scan Tags Dir marko Modules property Handlers json File Reader Require resolve From Dependency Chain create Error loaders taglib taglib taglib taglib taglib taglib taglib taglib taglib taglib dirname dirname dirname dirname dirname dirname transformer transformer path path path path file Path file Path Json Path pkg pkg tag File Path tag Name attr Key attr attr attr attr Def i i cur basename Path Dir dependencies dependency Names j dependency Name attribute Groups dependency Chain attr Group attr Group Dependency Chain raw Attr Group raw Attr Def taglib Loader path taglib Loader value attr Name attr Name transformer Path attr Group Name taglib taglib Props dependency Chain require path path path dirname dirname dirname dirname dirname dirname dirname dirname value value value value value value value value value value value value value value transformer transformer taglib Props taglib Props taglib Props Json Path tag File Path tag File Path tag File Path tag tag tag Props dependency Chain name tag Name tag Name tag Name attr Key attr attr attr Name attr Name attr Def dir dir taglib taglib taglib imports cur cur cur Path Path dependencies Dir Path Path attr Group Name raw Attr Group raw Attr Def err path path path path path dependency Chain taglib file Path file Path dirname id id id name key key tags Dir migrator Path attribute Groups attr Group Name attr Name exports is Supported Attribute Property is Supported Tag Property create Taglib types property Name property Name taglib Path property Name property Name create Taglib load Attribute From Props load Tag From Props load Tag From File load Taglib From Props load Taglib From File load Attributes is Supported Attribute Property is Supported Tag Property create Tag Def get File Map get Path find And Set File has File node Path fs strip Json Comments tag Def From Code loaders fs Read Options extend types tag File Types search Files file Map file Map files ext Name base Name full Path file tag Name i i i name type repeated Name path children len child Filename tag Def ext has Tag Json file Was Set template Code extracted Tag Def tag file dirname filename file Map tag Def tag Def tag Dirname dirname dirname file file file tag Dirname tag Dirname tag Dirname tag Dirname tag Dirname tag Dirname name file Map file Map repeated Name tags Config Dirname dir dir dir dir child Filename child Filename child Filename tag Json Path tag Json Path tag Json Path fs Read Options fs Read Options tag Def tag Def tag Def tag Def tag Def template Code extracted Tag Def tag tag tag Dependency Chain encoding name name name name name name name name name type type type type type type type type type type target Property preserve Name attributes base Name ext Name file path template exports extract Tag Def tag Start Reg Exp tokens Reg Exp start Matches depth js Tag Def code code code tag Def Start tag Def End js Tag Def last Index extract Tag Def Taglib Tag Attribute Property Nested Variable Imported Variable Transformer Taglib Lookup transformer Comparator TAG COMPARATOR merge has Taglib handle Nested Tags mergeNestedTags add Taglib get Tags Sorted Each Tag handle Attr find Attributes Tag Name Each Attribute get Tag find Attribute Tag Attribute get Attribute Each Template Migrator add Migrator Each Tag Migrator Each Template Transformer Each Node Transformer add Transformer Each Tag Transformer Each Text Transformer get Input Files to String ok taglib Types Text extend target Array source Array Ctor Target Tag merged fully Qualified Name cloned Nested Tag sorted Tags tags tags tags tags tag tag tag result global Attributes global Attributes taglib Attribute Groups taglib Attribute Groups attributes i i i i attribute Group Name attribute Group Name attribute Group attribute Group tag Name tag Name tag Name tag Name attr Name attribute len len pattern Attribute attr Def migration migrators transformers transformers input Files Set taglib Input Files a a b b target source tag tag tag parent Tag Name attr Def tag Name tag Name attributes attr Name attr Name migrator transformer b k target Array target Array source Array source Array Target Target cloned Nested Tag cloned Nested Tag nested Tag fully Qualified Name tag tag tag tag tag tag taglib taglib TAG COMPARATOR tag Name tag Name tag Name tag Name attr Def attr Name attr Name attr Name attr Name attr Name handle Attr Obj Obj Obj Obj Obj Obj Obj migration migrator add Migrator add Migrator callback callback callback callback callback callback node transformer add Transformer add Transformer transformer Comparator transformer Comparator taglib Id input Files Set k k k attribute Groups attribute Groups merged taglibs By Id inputFiles inputFiles sortedTags sortedTags sortedTags parent Tag Name name name fully Qualified Name tags transformers text Transformers attributes pattern Attributes tag Name tag Name tag Name tag Name exports handle Imports build Lookup register Taglib clear Cache lookup Cache i i imported Taglib taglibs lookup Cache Key lookup taglib taglib Path lookup taglib taglib dirname imported Taglib imported Taglib dirname taglib taglib taglib lookup taglib Path register Taglib build Lookup clear Cache registered Taglibs lookup Cache Key exports